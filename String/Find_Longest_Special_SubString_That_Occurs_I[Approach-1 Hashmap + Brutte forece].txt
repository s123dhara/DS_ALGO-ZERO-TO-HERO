import java.util.HashMap;
import java.util.Map;

public class Find_Longest_Special_SubString_That_Occurs_I {

    public static int maximumLength(String s) {
        Map<String, Integer> map = new HashMap<>();
        int result = 0;
        
        int n = s.length();
        for(int i = 0; i < n; i++) {
            StringBuilder sb = new StringBuilder();

            for(int j = i; j < n; j++) {
                if(sb.length() == 0 || sb.charAt(sb.length() - 1) == s.charAt(j)) {
                    sb.append(s.charAt(j));
                    map.put(sb.toString(), map.getOrDefault(sb.toString(), 0) + 1);
                }
                else {
                    break;
                }
            }
        }

        for(Map.Entry<String, Integer> e : map.entrySet()) {
            String key = e.getKey();
            int value = e.getValue();

            if(value >= 3 && key.length() > result) {
                result = key.length();
            }
        }

        return result == 0 ? -1 : result;
    }

    public static void main(String[] args) {
        String s = "aaaa";
        System.out.println(maximumLength(s));
    }
}
