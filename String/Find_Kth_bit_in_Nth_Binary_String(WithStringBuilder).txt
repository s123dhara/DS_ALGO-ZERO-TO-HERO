class Solution {

    public static String reverseAndInvert(StringBuilder sb) {
        int n = sb.length();
        int i = 0;
        int j = n - 1;

        while (i <= j) {
            // Swap characters and invert both
            char temp = sb.charAt(i);

            // Invert and swap i and j
            sb.setCharAt(i, (sb.charAt(j) == '0') ? '1' : '0');
            sb.setCharAt(j, (temp == '0') ? '1' : '0');

            i++;
            j--;
        }

        return sb.toString();
    }

    public static char findKthBit(int n, int k) {

        if (n == 1 && k == 1) {
            return '0';
        }

        String prev_string = "0";

        for (int i = 2; i <= n; i++) {
            StringBuilder sb = new StringBuilder();
            sb.append(prev_string);
            sb.append("1");
            sb.append(reverseAndInvert(new StringBuilder(prev_string)));

            prev_string = sb.toString();
        }

        return prev_string.charAt(k - 1);
    }
}