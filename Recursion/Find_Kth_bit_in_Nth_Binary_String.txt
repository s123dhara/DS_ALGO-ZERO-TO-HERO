
/**
 * Fint_Kth_Bit_In_Nth_Binary_String
 */
public class Fint_Kth_Bit_In_Nth_Binary_String {

    public static String reverseAndInvert(StringBuilder sb) {
        int n = sb.length();
        int i = 0;
        int j = n - 1;

        while(i < j ){
            char c = sb.charAt(i);
            sb.setCharAt(i, sb.charAt(j));
            sb.setCharAt(j, c);
            i++;
            j--;
        }

        i = 0;
        while(i < n) {
            if(sb.charAt(i) == '0') {
                sb.setCharAt(i, '1');
            }else {
                sb.setCharAt(i, '0');
            }

            i += 1;
        }

        return sb.toString();
    }    

    public static char findKthBit(int n, int k) {

        if(n == 1 && k == 1) {
            return '0';
        }

        String prev_string = "0";
        
        for(int i = 2; i <= n; i++) {
            StringBuilder sb = new StringBuilder();
            sb.append(prev_string);
            sb.append("1");
            sb.append(reverseAndInvert(new StringBuilder(prev_string)));

            prev_string = sb.toString();
        }

        return prev_string.charAt(k - 1);
    }

    public static void main(String[] args) {
        int n = 4;
        int k = 11;

        System.out.println("OUTPUT : "+findKthBit(n, k));
    }
}